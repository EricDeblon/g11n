#######################################################################################
#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
#######################################################################################
#
# Copyright 2006 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#
#######################################################################################
#
#####################################################################

LC_CTYPE

include CTYPE.UTF-8

END LC_CTYPE




LC_COLLATE

include COLLATE.UTF-8

END LC_COLLATE



#
# LC_MONETARY
#
# KS C 5861-1992 defines:
#
#	(1) International currency format:	KRW x,xxx
#	(2) National currency format:		W[[+]|-] x,xxx
#
# where 'W' is a WON character.

LC_MONETARY

int_curr_symbol		"KRW "
currency_symbol		"<UFFE6>"
mon_decimal_point	"."
mon_thousands_sep	","
mon_grouping		3;0
positive_sign		""
negative_sign		"-"
int_frac_digits		0
frac_digits		0
p_cs_precedes		1
p_sep_by_space		0
n_cs_precedes		1
n_sep_by_space		0
p_sign_posn		1
n_sign_posn		1

int_p_cs_precedes       1
int_p_sep_by_space      0
int_n_cs_precedes       1
int_n_sep_by_space      0
int_p_sign_posn         1
int_n_sign_posn         4

END LC_MONETARY

#
# LC_NUMERIC
#
# KS C 5861-1992 only defines decimal point and thousands separator as 
# "." and ",", respectively, and they should come from codeset 0.

LC_NUMERIC

decimal_point		"."
thousands_sep		","
grouping		3;0

END LC_NUMERIC

#
# LC_TIME
#
# KS C 5861-1992 defines:
#
#	Y nyun M wol D il W yoil ojun/ohoo H Si M boon S cho 
#
# where
#	Y: 1 <= Y <= 9999
#	M: 1 <= M <= 12
#	D: 1 <= D <= 31
#	W: Il, Wol, Hwa, Soo, Mok, Kum, To (Yo Il)  
#	H: 0 <= H <= 23 / 0 <= H <= 12
#	M: 0 <= M <= 59
#	S: 0 <= S <= 61
#
#	When S is equal to 61, it means an intercalary second.
#       Y, M, D, H, M, and S are belong to digit class and they are integer.
#	W is a string.
#	"W Yo Il"'s abbreviation can be "(W)".
#	"H si M boon S cho" can be represented as "H:M:S".
#	Time zone is "KST".


LC_TIME

abday	"<UC77C>";"<UC6D4>";"<UD654>";"<UC218>";"<UBAA9>";"<UAE08>";"<UD1A0>"

day	"<UC77C><UC694><UC77C>";"<UC6D4><UC694><UC77C>";"<UD654><UC694><UC77C>";\
	"<UC218><UC694><UC77C>";"<UBAA9><UC694><UC77C>";"<UAE08><UC694><UC77C>";\
	"<UD1A0><UC694><UC77C>"

abmon	"<space><U0031><UC6D4>";"<space><U0032><UC6D4>";"<space><U0033><UC6D4>";\
	"<space><U0034><UC6D4>";"<space><U0035><UC6D4>";"<space><U0036><UC6D4>";\
	"<space><U0037><UC6D4>";"<space><U0038><UC6D4>";"<space><U0039><UC6D4>";\
	"<U0031><U0030><UC6D4>";"<U0031><U0031><UC6D4>";"<U0031><U0032><UC6D4>"

mon	"<U0031><UC6D4>";"<U0032><UC6D4>";"<U0033><UC6D4>";\
	"<U0034><UC6D4>";"<U0035><UC6D4>";"<U0036><UC6D4>";\
	"<U0037><UC6D4>";"<U0038><UC6D4>";"<U0039><UC6D4>";\
	"<U0031><U0030><UC6D4>";"<U0031><U0031><UC6D4>";"<U0031><U0032><UC6D4>"

d_t_fmt "%Y<UB144><space>%B<space>%e<UC77C><space>%A<space>%p<space>%I<UC2DC><space>%M<UBD84><space>%S<UCD08>"

date_fmt "%Y<UB144><space>%B<space>%e<UC77C><space>%A<space>%p<space>%I<UC2DC><space>%M<UBD84><space>%S<UCD08>"

d_fmt   "%Y<UB144><space>%m<UC6D4><space>%d<UC77C>"

#t_fmt   "%H<UC2DC><space>%M<UBD84><space>%S<UCD08>"
t_fmt "%p<space>%I<UC2DC><space>%M<UBD84><space>%S<UCD08>"

am_pm   "<UC624><UC804>";"<UC624><UD6C4>"

t_fmt_ampm	"%p<space>%I<UC2DC><space>%M<UBD84><space>%S<UCD08>"

era	"+:1:-2333/01/01:+*:<UB2E8><UAE30>:%EC<space>%Ey<UB144>"

era_d_fmt	"%EY<space>%B<space>%e<UC77C>"

era_t_fmt	"%I<UC2DC><space>%M<UBD84><space>%S<UCD08>"

era_d_t_fmt	"%EY<space>%B<space>%e<UC77C><space>%A<space>%p<space>%I<UC2DC><space>%M<UBD84><space>%S<UCD08>"

#alt_digits

END LC_TIME
#
# LC_MESSAGES
#
# KS C 5861-1992 doesn't define anything on this category in terms of XPG4.
# And, many people prefers to have y|Y|n|N.

LC_MESSAGES

yesexpr "^[yY]"
noexpr  "^[nN]"

#
# Following two keywords will be withdrawn.
yesstr  "y"
nostr   "n"

END LC_MESSAGES
