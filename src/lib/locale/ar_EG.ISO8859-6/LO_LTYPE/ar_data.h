/*
 * CDDL HEADER START
 *
 * The contents of this file are subject to the terms of the
 * Common Development and Distribution License (the "License").
 * You may not use this file except in compliance with the License.
 *
 * You can obtain a copy of the license at src/OPENSOLARIS.LICENSE
 * or http://www.opensolaris.org/os/licensing.
 * See the License for the specific language governing permissions
 * and limitations under the License.
 *
 * When distributing Covered Code, include this CDDL HEADER in each
 * file and include the License file at src/OPENSOLARIS.LICENSE.
 * If applicable, add the following below this CDDL HEADER, with the
 * fields enclosed by brackets "[]" replaced with your own identifying
 * information: Portions Copyright [yyyy] [name of copyright owner]
 *
 * CDDL HEADER END
 */
/*
 * Copyright (c) 1998, 2010, Oracle and/or its affiliates. All rights reserved.
 */

const int LOtypes::charDataIndex[] = {
0xffff
};
const LOtypes::lotype_t LOtypes::charData[] = {
/*0x0020*/ _CELL , /*5 = cd[0]*/
/*0x0021*/ _CELL ,
/*0x0022*/ _CELL ,
/*0x0023*/ _CELL ,
/*0x0024*/ _CELL ,
/*0x0025*/ _SEP|_CELL ,
/*0x0026*/ _CELL ,
/*0x0027*/ _CELL ,
/*0x0028*/ _SWAP|_CELL ,
/*0x0029*/ _SWAP|_CELL ,
/*0x002a*/ _SEP|_CELL ,
/*0x002b*/ _SEP|_CELL ,
/*0x002c*/ _SEP|_CELL ,
/*0x002d*/ _SEP|_CELL ,
/*0x002e*/ _SEP|_CELL ,
/*0x002f*/ _SEP|_CELL ,
/*0x0030*/ _NUM|_CELL ,
/*0x0031*/ _NUM|_CELL ,
/*0x0032*/ _NUM|_CELL ,
/*0x0033*/ _NUM|_CELL ,
/*0x0034*/ _NUM|_CELL ,
/*0x0035*/ _NUM|_CELL ,
/*0x0036*/ _NUM|_CELL ,
/*0x0037*/ _NUM|_CELL ,
/*0x0038*/ _NUM|_CELL ,
/*0x0039*/ _NUM|_CELL ,
/*0x003a*/ _SEP|_CELL ,
/*0x003b*/ _CELL ,
/*0x003c*/ _SEP|_SWAP|_CELL ,
/*0x003d*/ _SEP|_CELL ,
/*0x003e*/ _SEP|_SWAP|_CELL ,
/*0x003f*/ _CELL ,
/*0x0040*/ _CELL ,
/*0x0041*/ _LTR|_CELL ,
/*0x0042*/ _LTR|_CELL ,
/*0x0043*/ _LTR|_CELL ,
/*0x0044*/ _LTR|_CELL ,
/*0x0045*/ _LTR|_CELL ,
/*0x0046*/ _LTR|_CELL ,
/*0x0047*/ _LTR|_CELL ,
/*0x0048*/ _LTR|_CELL ,
/*0x0049*/ _LTR|_CELL ,
/*0x004a*/ _LTR|_CELL ,
/*0x004b*/ _LTR|_CELL ,
/*0x004c*/ _LTR|_CELL ,
/*0x004d*/ _LTR|_CELL ,
/*0x004e*/ _LTR|_CELL ,
/*0x004f*/ _LTR|_CELL ,
/*0x0050*/ _LTR|_CELL ,
/*0x0051*/ _LTR|_CELL ,
/*0x0052*/ _LTR|_CELL ,
/*0x0053*/ _LTR|_CELL ,
/*0x0054*/ _LTR|_CELL ,
/*0x0055*/ _LTR|_CELL ,
/*0x0056*/ _LTR|_CELL ,
/*0x0057*/ _LTR|_CELL ,
/*0x0058*/ _LTR|_CELL ,
/*0x0059*/ _LTR|_CELL ,
/*0x005a*/ _LTR|_CELL ,
/*0x005b*/ _SWAP|_CELL ,
/*0x005c*/ _CELL ,
/*0x005d*/ _SWAP|_CELL ,
/*0x005e*/ _CELL ,
/*0x005f*/ _CELL ,
/*0x0060*/ _LTR|_CELL ,
/*0x0061*/ _LTR|_CELL ,
/*0x0062*/ _LTR|_CELL ,
/*0x0063*/ _LTR|_CELL ,
/*0x0064*/ _LTR|_CELL ,
/*0x0065*/ _LTR|_CELL ,
/*0x0066*/ _LTR|_CELL ,
/*0x0067*/ _LTR|_CELL ,
/*0x0068*/ _LTR|_CELL ,
/*0x0069*/ _LTR|_CELL ,
/*0x006a*/ _LTR|_CELL ,
/*0x006b*/ _LTR|_CELL ,
/*0x006c*/ _LTR|_CELL ,
/*0x006d*/ _LTR|_CELL ,
/*0x006e*/ _LTR|_CELL ,
/*0x006f*/ _LTR|_CELL ,
/*0x0070*/ _LTR|_CELL ,
/*0x0071*/ _LTR|_CELL ,
/*0x0072*/ _LTR|_CELL ,
/*0x0073*/ _LTR|_CELL ,
/*0x0074*/ _LTR|_CELL ,
/*0x0075*/ _LTR|_CELL ,
/*0x0076*/ _LTR|_CELL ,
/*0x0077*/ _LTR|_CELL ,
/*0x0078*/ _LTR|_CELL ,
/*0x0079*/ _LTR|_CELL ,
/*0x007a*/ _LTR|_CELL ,
/*0x007b*/ _SWAP|_CELL ,
/*0x007c*/ _SEP|_CELL ,
/*0x007d*/ _SWAP|_CELL ,
/*0x007e*/ _CELL,
/*0x007f dummy */ _END|_CELL,
/*0x00a0*/ _RTL|_CELL ,
/*0x00a1 dummy */ _END|_CELL,
/*0x00a2 dummy */ _END|_CELL,
/*0x00a3 dummy */ _END|_CELL,
/*0x00a4 dummy */ _END|_CELL,
/*0x00a5 dummy */ _END|_CELL,
/*0x00a6 dummy */ _END|_CELL,
/*0x00a7 dummy */ _END|_CELL,
/*0x00a8 dummy */ _END|_CELL,
/*0x00a9 dummy */ _END|_CELL,
/*0x00aa dummy */ _END|_CELL,
/*0x00ab dummy */ _END|_CELL,
/*0x00ac*/ _RTL|_CELL ,
/*0x00ad*/ _RTL|_CELL ,
/*0x00ae dummy */ _END|_CELL,
/*0x00af dummy */ _END|_CELL,
/*0x00b0 dummy */ _END|_CELL,
/*0x00b1 dummy */ _END|_CELL,
/*0x00b2 dummy */ _END|_CELL,
/*0x00b3 dummy */ _END|_CELL,
/*0x00b4 dummy */ _END|_CELL,
/*0x00b5 dummy */ _END|_CELL,
/*0x00b6 dummy */ _END|_CELL,
/*0x00b7 dummy */ _END|_CELL,
/*0x00b8 dummy */ _END|_CELL,
/*0x00b9 dummy */ _END|_CELL,
/*0x00ba dummy */ _END|_CELL,
/*0x00bb*/ _RTL|_CELL ,
/*0x00bc dummy */ _END|_CELL,
/*0x00bd dummy */ _END|_CELL,
/*0x00be dummy */ _END|_CELL,
/*0x00bf*/ _RTL|_CELL ,
/*0x00c0 dummy* / _END|_CELL ,
/*0x00c1*/ _RTL|_AS1|_CELL ,
/*0x00c2*/ _RTL|_AS2|_CELL ,
/*0x00c3*/ _RTL|_AS2|_CELL ,
/*0x00c4*/ _RTL|_AS2|_CELL ,
/*0x00c5*/ _RTL|_AS2|_CELL ,
/*0x00c6*/ _RTL|_AS4|_CELL ,
/*0x00c7*/ _RTL|_AS2|_CELL ,
/*0x00c8*/ _RTL|_AS4|_CELL ,
/*0x00c9*/ _RTL|_AS4|_CELL ,
/*0x00ca*/ _RTL|_AS4|_CELL ,
/*0x00cb*/ _RTL|_AS4|_CELL ,
/*0x00cc*/ _RTL|_AS4|_CELL ,
/*0x00cd*/ _RTL|_AS4|_CELL ,
/*0x00ce*/ _RTL|_AS4|_CELL ,
/*0x00cf*/ _RTL|_AS2|_CELL ,
/*0x00d0*/ _RTL|_AS2|_CELL ,
/*0x00d1*/ _RTL|_AS2|_CELL ,
/*0x00d2*/ _RTL|_AS2|_CELL ,
/*0x00d3*/ _RTL|_AS4|_CELL ,
/*0x00d4*/ _RTL|_AS4|_CELL ,
/*0x00d5*/ _RTL|_AS4|_CELL ,
/*0x00d6*/ _RTL|_AS4|_CELL ,
/*0x00d7*/ _RTL|_AS4|_CELL ,
/*0x00d8*/ _RTL|_AS4|_CELL ,
/*0x00d9*/ _RTL|_AS4|_CELL ,
/*0x00da*/ _RTL|_AS4|_CELL ,
/*0x00db dummy*/ _END|_CELL ,
/*0x00dc dummy*/ _END|_CELL ,
/*0x00dd dummy*/ _END|_CELL ,
/*0x00de dummy*/ _END|_CELL ,
/*0x00df dummy*/ _END|_CELL ,
/*0x00e0*/ _RTL|_AS4|_CELL ,
/*0x00e1*/ _RTL|_AS4|_CELL ,
/*0x00e2*/ _RTL|_AS4|_CELL ,
/*0x00e3*/ _RTL|_AS4|_CELL ,
/*0x00e4*/ _RTL|_AS4|_ACB|_CELL ,
/*0x00e5*/ _RTL|_AS4|_CELL ,
/*0x00e6*/ _RTL|_AS4|_CELL ,
/*0x00e7*/ _RTL|_AS4|_CELL ,
/*0x00e8*/ _RTL|_AS2|_CELL ,
/*0x00e9*/ _RTL|_AS4|_CELL ,
/*0x00ea*/ _RTL|_AS4|_CELL ,
/*0x00eb*/ _RTL|_AS4|_VOC ,
/*0x00ec*/ _RTL|_AS4|_VOC ,
/*0x00ed*/ _RTL|_AS4|_VOC ,
/*0x00ee*/ _RTL|_AS4|_VOC ,
/*0x00ef*/ _RTL|_AS4|_VOC ,
/*0x00f0*/ _RTL|_AS4|_VOC ,
/*0x00f1*/ _RTL|_AS4|_VOC ,
/*0x00f2*/ _RTL|_AS4|_VOC ,
/*0x00f3 dummy*/ _END|_CELL ,
/*0x00f4 dummy*/ _END|_CELL ,
/*0x00f5 dummy*/ _END|_CELL ,
/*0x00f6 dummy*/ _END|_CELL ,
/*0x00f7 dummy*/ _END|_CELL ,
/*0x00f8 dummy*/ _END|_CELL ,
/*0x00f9 dummy*/ _END|_CELL ,
/*0x00fa dummy*/ _END|_CELL ,
/*0x00fb dummy*/ _END|_CELL ,
/*0x00fc dummy*/ _END|_CELL ,
/*0x00fd dummy*/ _END|_CELL ,
/*0x00fe dummy*/ _END|_CELL ,
/*0x00ff dummy*/ _END|_CELL ,
/*0x064b*/ _RTL|_VOC ,
/*0x064c*/ _RTL|_VOC ,
/*0x064d*/ _RTL|_VOC ,
/*0x064e*/ _RTL|_VOC ,
/*0x064f*/ _RTL|_VOC ,
/*0x0650*/ _RTL|_VOC ,
/*0x0651*/ _RTL|_VOC ,
/*0x0652*/ _RTL|_VOC ,
/*0xfc5e*/ _RTL|_VOC|_CELL ,
/*0xfc5f*/ _RTL|_VOC|_CELL ,
/*0xfc60*/ _RTL|_VOC|_CELL ,
/*0xfc61*/ _RTL|_VOC|_CELL ,
/*0xfc62*/ _RTL|_VOC|_CELL ,
/*0xfef5*/ _RTL|_AS2|_CELL ,
/*0xfef6 dummy*/ _RTL|_AS2|_CELL,
/*0xfef7*/ _RTL|_AS2|_CELL ,
/*0xfef8 dummy*/ _RTL|_AS2|_CELL,
/*0xfef9*/ _RTL|_AS2|_CELL ,
/*0xfefa dummy*/ _RTL|_AS2|_CELL,
/*0xfefb*/ _RTL|_AS2|_CELL  /*216 = cd[211]*/
};
const int LOtypes::shapeDataIndex[] = {
0xfef5,
0xfef7,
0xfef9,
0xfefb
};    
const LOtypes::shapeData_t LOtypes::shapeData[] = {
/*0x00a0*/ {0x0020,0x0020,0x0020,0x0020},
/*0x00a1 dummy*/ {0x00a1,0x00a1,0x00a1,0x00a1},
/*0x00a2 dummy*/ {0x00a2,0x00a2,0x00a2,0x00a2},
/*0x00a3 dummy*/ {0x00a3,0x00a3,0x00a3,0x00a3},
/*0x00a4 dummy*/ {0x00a4,0x00a4,0x00a4,0x00a4},
/*0x00a5 dummy*/ {0x00a5,0x00a5,0x00a5,0x00a5},
/*0x00a6 dummy*/ {0x00a6,0x00a6,0x00a6,0x00a6},
/*0x00a7 dummy*/ {0x00a7,0x00a7,0x00a7,0x00a7},
/*0x00a8 dummy*/ {0x00a8,0x00a8,0x00a8,0x00a8},
/*0x00a9 dummy*/ {0x00a9,0x00a9,0x00a9,0x00a9},
/*0x00aa dummy*/ {0x00aa,0x00aa,0x00aa,0x00aa},
/*0x00ab dummy*/ {0x00ab,0x00ab,0x00ab,0x00ab},
/*0x00ac*/ {0x060c,0x060c,0x060c,0x060c},
/*0x00ad*/ {0x00ad,0x00ad,0x00ad,0x00ad},
/*0x00ae dummy*/ {0x00ae,0x00ae,0x00ae,0x00ae},
/*0x00af dummy*/ {0x00af,0x00af,0x00af,0x00af},
/*0x00b0 dummy*/ {0x00b0,0x00b0,0x00b0,0x00b0},
/*0x00b1 dummy*/ {0x00b1,0x00b1,0x00b1,0x00b1},
/*0x00b2 dummy*/ {0x00b2,0x00b2,0x00b2,0x00b2},
/*0x00b3 dummy*/ {0x00b3,0x00b3,0x00b3,0x00b3},
/*0x00b4 dummy*/ {0x00b4,0x00b4,0x00b4,0x00b4},
/*0x00b5 dummy*/ {0x00b5,0x00b5,0x00b5,0x00b5},
/*0x00b6 dummy*/ {0x00b6,0x00b6,0x00b6,0x00b6},
/*0x00b7 dummy*/ {0x00b7,0x00b7,0x00b7,0x00b7},
/*0x00b8 dummy*/ {0x00b8,0x00b8,0x00b8,0x00b8},
/*0x00b9 dummy*/ {0x00b9,0x00b9,0x00b9,0x00b9},
/*0x00ba dummy*/ {0x00ba,0x00ba,0x00ba,0x00ba},
/*0x00bb*/ {0x061b,0x061b,0x061b,0x061b},
/*0x00bc dummy*/ {0x00bc,0x00bc,0x00bc,0x00bc},
/*0x00bd dummy*/ {0x00bd,0x00bd,0x00bd,0x00bd},
/*0x00be dummy*/ {0x00be,0x00be,0x00be,0x00be},
/*0x00bf*/ {0x061f,0x061f,0x061f,0x061f},
/*0x00c0 dummy*/ {0x00ac,0x00ac,0x00ac,0x00ac},
/*0x00c1*/ {0x0621,0x0621,0x0621,0x0621},
/*0x00c2*/ {0xfe81,0xfe82,0xfe82,0xfe81},
/*0x00c3*/ {0xfe83,0xfe84,0xfe84,0xfe83},
/*0x00c4*/ {0xfe85,0xfe86,0xfe86,0xfe85},
/*0x00c5*/ {0xfe87,0xfe88,0xfe88,0xfe87},
/*0x00c6*/ {0xfe8b,0xfe8c,0xfe8a,0xfe89},
/*0x00c7*/ {0xfe8d,0xfe8e,0xfe8e,0xfe8d},
/*0x00c8*/ {0xfe91,0xfe92,0xfe90,0xfe8f},
/*0x00c9*/ {0xfe97,0xfe98,0xfe94,0xfe93},
/*0x00ca*/ {0xfe97,0xfe98,0xfe96,0xfe95},
/*0x00cb*/ {0xfe9b,0xfe9c,0xfe9a,0xfe99},
/*0x00cc*/ {0xfe9f,0xfea0,0xfe9e,0xfe9d},
/*0x00cd*/ {0xfea3,0xfea4,0xfea2,0xfea1},
/*0x00ce*/ {0xfea7,0xfea8,0xfea6,0xfea5},
/*0x00cf*/ {0xfea9,0xfeaa,0xfeaa,0xfea9},
/*0x00d0*/ {0xfeab,0xfeac,0xfeac,0xfeab},
/*0x00d1*/ {0xfead,0xfeae,0xfeae,0xfead},
/*0x00d2*/ {0xfeaf,0xfeb0,0xfeb0,0xfeaf},
/*0x00d3*/ {0xfeb3,0xfeb4,0xfeb2,0xfeb1},
/*0x00d4*/ {0xfeb7,0xfeb8,0xfeb6,0xfeb5},
/*0x00d5*/ {0xfebb,0xfebc,0xfeba,0xfeb9},
/*0x00d6*/ {0xfebf,0xfec0,0xfebe,0xfebd},
/*0x00d7*/ {0xfec3,0xfec4,0xfec2,0xfec1},
/*0x00d8*/ {0xfec7,0xfec8,0xfec6,0xfec5},
/*0x00d9*/ {0xfecb,0xfecc,0xfeca,0xfec9},
/*0x00da*/ {0xfecf,0xfed0,0xfece,0xfecd},
/*0x00db dummy*/ {0x00db,0x00db,0x00db,0x00db},
/*0x00dc dummy*/ {0x00dc,0x00dc,0x00dc,0x00dc},
/*0x00dd dummy*/ {0x00dd,0x00dd,0x00dd,0x00dd},
/*0x00de dummy*/ {0x00de,0x00de,0x00de,0x00de},
/*0x00df dummy*/ {0x00df,0x00df,0x00df,0x00df},
/*0x00e0*/ {0x0640,0x0640,0x0640,0x0640},
/*0x00e1*/ {0xfed3,0xfed4,0xfed2,0xfed1},
/*0x00e2*/ {0xfed7,0xfed8,0xfed6,0xfed5},
/*0x00e3*/ {0xfedb,0xfedc,0xfeda,0xfed9},
/*0x00e4*/ {0xfedf,0xfee0,0xfede,0xfedd},
/*0x00e5*/ {0xfee3,0xfee4,0xfee2,0xfee1},
/*0x00e6*/ {0xfee7,0xfee8,0xfee6,0xfee5},
/*0x00e7*/ {0xfeeb,0xfeec,0xfeea,0xfee9},
/*0x00e8*/ {0xfeed,0xfeee,0xfeee,0xfeed},
/*0x00e9*/ {0xfef3,0xfef4,0xfef0,0xfeef},
/*0x00ea*/ {0xfef3,0xfef4,0xfef2,0xfef1},
/*0x00eb*/ {0x064b,0x064b,0x064b,0xfe70},
/*0x00ec*/ {0x064c,0x064c,0x064c,0xfe72},
/*0x00ed*/ {0x064d,0x064d,0x064d,0xfe74},
/*0x00ee*/ {0x064e,0x064e,0x064e,0xfe76},
/*0x00ef*/ {0x064f,0x064f,0x064f,0xfe78},
/*0x00f0*/ {0x0650,0x0650,0x0650,0x0650},
/*0x00f1*/ {0x0651,0x0651,0x0651,0x0651},
/*0x00f2*/ {0x0652,0x0652,0x0652,0xfe7e},
/*0xfef5*/ {0xfef5,0xfef6,0xfef6,0xfef5},
/*0xfef6 dummy*/ {0xfef6,0xfef6,0xfef6,0xfef6},
/*0xfef7*/ {0xfef7,0xfef8,0xfef8,0xfef7},
/*0xfef8 dummy*/ {0xfef8,0xfef8,0xfef8,0xfef8},
/*0xfef9*/ {0xfef9,0xfefa,0xfefa,0xfef9},
/*0xfefa dummy*/ {0xfefa,0xfefa,0xfefa,0xfefa},
/*0xfefb*/ {0xfefb,0xfefc,0xfefc,0xfefb}
};
const int LOtypes::comboDataIndex[] = {
	(0x00e4 << 16) | 0x00c2,
	(0x00e4 << 16) | 0x00c3,
	(0x00e4 << 16) | 0x00c5,
	(0x00e4 << 16) | 0x00c7
    };
const LOtypes::val_t LOtypes::comboData[] = {
	0xfef5,
	0xfef7,
	0xfef9,
	0xfefb
    };
const LOtypes::val_t LOtypes::numData[] = {
	0x0660,
	0x0661,
	0x0662,
	0x0663,
	0x0664,
	0x0665,
	0x0666,
	0x0667,
	0x0668,
	0x0669
    };

const int LOtypes::swapDataIndex[] = {
	(val_t)'(',
	(val_t)')',
	(val_t)'/',
	(val_t)'<',
	(val_t)'>',
        (val_t)'[',
	(val_t)'\\',
	(val_t)']',
	(val_t)'{',
	(val_t)'}'
    };

const LOtypes::val_t LOtypes::swapData[] = {
        (val_t)')',
	(val_t)'(',
	(val_t)'\\',
	(val_t)'>',
	(val_t)'<',
	(val_t)']',
	(val_t)'/',
	(val_t)'[',
	(val_t)'}',
	(val_t)'{'
    }; 


